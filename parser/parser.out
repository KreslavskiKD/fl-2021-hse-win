Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expressions
Rule 1     expressions -> expression
Rule 2     expressions -> expression expressions
Rule 3     expression -> classdef
Rule 4     expression -> automaton
Rule 5     expression -> alphabet
Rule 6     empty -> <empty>
Rule 7     alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND
Rule 8     alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND
Rule 9     alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND
Rule 10    enumeration -> term
Rule 11    enumeration -> term COMMA enumeration
Rule 12    term -> CHAR
Rule 13    term -> INT
Rule 14    term -> STRING
Rule 15    term -> ID
Rule 16    term -> CLASSNAME PARSTART enumeration PAREND
Rule 17    alphabetdescribebody -> paramsdescribe
Rule 18    alphabetdescribebody -> paramsdescribe COMMA alphabetdescribebody
Rule 19    paramsdescribe -> enumeration FROM ID
Rule 20    transitionterm -> CHAR
Rule 21    transitionterm -> INT
Rule 22    transitionterm -> STRING
Rule 23    transitionterm -> CLASSNAME PARSTART enumeration PAREND
Rule 24    transitionkeyword -> ELSE
Rule 25    transitionkeyword -> DEADEND
Rule 26    transitionkeyword -> ALPHABET
Rule 27    transitionkeyword -> ITSELF
Rule 28    transition -> transitionterm ARROW ID
Rule 29    transition -> transitionkeyword ARROW ID
Rule 30    transition -> transitionkeyword ARROW transitionkeyword
Rule 31    automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
Rule 32    automatondescribebody -> START statedescription states TERMINAL BLOCKSTART termstates BLOCKEND
Rule 33    statedescription -> transition statedescription
Rule 34    statedescription -> transition
Rule 35    states -> states ID statedescription
Rule 36    states -> ID statedescription
Rule 37    states -> empty
Rule 38    termstates -> termstates ID statedescription
Rule 39    termstates -> ID statedescription
Rule 40    termstates -> empty
Rule 41    classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND
Rule 42    field -> ID TYPIZATION CLASSNAME
Rule 43    field -> ID TYPIZATION CLASSNAME EQUALITY transitionterm
Rule 44    fields -> field
Rule 45    fields -> field COMMA fields
Rule 46    classbody -> method
Rule 47    classbody -> method classbody
Rule 48    method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND
Rule 49    compareoperation -> ID METHOD COMPAREOPERATOR ID METHOD
Rule 50    logicoperations -> compareoperation
Rule 51    logicoperations -> PARSTART logicoperations PAREND
Rule 52    logicoperations -> logicoperations LOGICOPERATOR PARSTART compareoperation PAREND

Terminals, with rules where they appear

ALPHABET             : 26
ARROW                : 28 29 30
BLOCKEND             : 7 9 31 32 41 48
BLOCKSTART           : 7 9 31 32 41 48
CHAR                 : 12 20
CLASS                : 41
CLASSNAME            : 7 8 8 9 9 16 23 31 31 41 41 42 43 48
COMMA                : 11 18 45
COMPAREOPERATOR      : 49
DEADEND              : 25
DEF                  : 7 8 9 31
ELSE                 : 24
EQUALITY             : 7 8 9 31 43
FROM                 : 19
FUN                  : 48
ID                   : 7 8 9 15 19 28 29 31 31 35 36 38 39 42 43 48 49 49
INT                  : 13 21
ITSELF               : 27
LOGICOPERATOR        : 52
METHOD               : 8 9 31 31 49 49
OVERRIDE             : 48
PAREND               : 8 16 23 31 41 48 48 51 52
PARSTART             : 8 16 23 31 41 48 48 51 52
RETURN               : 48
START                : 32
STRING               : 14 22
TERMINAL             : 32
TYPIZATION           : 7 8 9 31 41 42 43 48
error                : 

Nonterminals, with rules where they appear

alphabet             : 5
alphabetdescribebody : 9 18
automaton            : 4
automatondescribebody : 31
classbody            : 41 47
classdef             : 3
compareoperation     : 50 52
empty                : 37 40
enumeration          : 7 8 11 16 19 23
expression           : 1 2
expressions          : 2 0
field                : 44 45
fields               : 41 45 48
logicoperations      : 48 51 52
method               : 46 47
paramsdescribe       : 17 18
statedescription     : 32 33 35 36 38 39
states               : 32 35
term                 : 10 11
termstates           : 32 38
transition           : 33 34
transitionkeyword    : 29 30 30
transitionterm       : 28 43

Parsing method: LALR

state 0

    (0) S' -> . expressions
    (1) expressions -> . expression
    (2) expressions -> . expression expressions
    (3) expression -> . classdef
    (4) expression -> . automaton
    (5) expression -> . alphabet
    (41) classdef -> . CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND
    (31) automaton -> . DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (7) alphabet -> . DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND
    (8) alphabet -> . DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND
    (9) alphabet -> . DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND

    CLASS           shift and go to state 6
    DEF             shift and go to state 7

    expressions                    shift and go to state 1
    expression                     shift and go to state 2
    classdef                       shift and go to state 3
    automaton                      shift and go to state 4
    alphabet                       shift and go to state 5

state 1

    (0) S' -> expressions .



state 2

    (1) expressions -> expression .
    (2) expressions -> expression . expressions
    (1) expressions -> . expression
    (2) expressions -> . expression expressions
    (3) expression -> . classdef
    (4) expression -> . automaton
    (5) expression -> . alphabet
    (41) classdef -> . CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND
    (31) automaton -> . DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (7) alphabet -> . DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND
    (8) alphabet -> . DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND
    (9) alphabet -> . DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND

    $end            reduce using rule 1 (expressions -> expression .)
    CLASS           shift and go to state 6
    DEF             shift and go to state 7

    expression                     shift and go to state 2
    expressions                    shift and go to state 8
    classdef                       shift and go to state 3
    automaton                      shift and go to state 4
    alphabet                       shift and go to state 5

state 3

    (3) expression -> classdef .

    CLASS           reduce using rule 3 (expression -> classdef .)
    DEF             reduce using rule 3 (expression -> classdef .)
    $end            reduce using rule 3 (expression -> classdef .)


state 4

    (4) expression -> automaton .

    CLASS           reduce using rule 4 (expression -> automaton .)
    DEF             reduce using rule 4 (expression -> automaton .)
    $end            reduce using rule 4 (expression -> automaton .)


state 5

    (5) expression -> alphabet .

    CLASS           reduce using rule 5 (expression -> alphabet .)
    DEF             reduce using rule 5 (expression -> alphabet .)
    $end            reduce using rule 5 (expression -> alphabet .)


state 6

    (41) classdef -> CLASS . CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND

    CLASSNAME       shift and go to state 9


state 7

    (31) automaton -> DEF . ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (7) alphabet -> DEF . ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND
    (8) alphabet -> DEF . ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND
    (9) alphabet -> DEF . ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND

    ID              shift and go to state 10


state 8

    (2) expressions -> expression expressions .

    $end            reduce using rule 2 (expressions -> expression expressions .)


state 9

    (41) classdef -> CLASS CLASSNAME . PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND

    PARSTART        shift and go to state 11


state 10

    (31) automaton -> DEF ID . TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (7) alphabet -> DEF ID . TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND
    (8) alphabet -> DEF ID . TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND
    (9) alphabet -> DEF ID . TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND

    TYPIZATION      shift and go to state 12


state 11

    (41) classdef -> CLASS CLASSNAME PARSTART . fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND
    (44) fields -> . field
    (45) fields -> . field COMMA fields
    (42) field -> . ID TYPIZATION CLASSNAME
    (43) field -> . ID TYPIZATION CLASSNAME EQUALITY transitionterm

    ID              shift and go to state 15

    fields                         shift and go to state 13
    field                          shift and go to state 14

state 12

    (31) automaton -> DEF ID TYPIZATION . CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (7) alphabet -> DEF ID TYPIZATION . CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND
    (8) alphabet -> DEF ID TYPIZATION . CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND
    (9) alphabet -> DEF ID TYPIZATION . CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND

    CLASSNAME       shift and go to state 16


state 13

    (41) classdef -> CLASS CLASSNAME PARSTART fields . PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND

    PAREND          shift and go to state 17


state 14

    (44) fields -> field .
    (45) fields -> field . COMMA fields

    PAREND          reduce using rule 44 (fields -> field .)
    COMMA           shift and go to state 18


state 15

    (42) field -> ID . TYPIZATION CLASSNAME
    (43) field -> ID . TYPIZATION CLASSNAME EQUALITY transitionterm

    TYPIZATION      shift and go to state 19


state 16

    (31) automaton -> DEF ID TYPIZATION CLASSNAME . EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (7) alphabet -> DEF ID TYPIZATION CLASSNAME . EQUALITY BLOCKSTART enumeration BLOCKEND
    (8) alphabet -> DEF ID TYPIZATION CLASSNAME . EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND
    (9) alphabet -> DEF ID TYPIZATION CLASSNAME . EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND

    EQUALITY        shift and go to state 20


state 17

    (41) classdef -> CLASS CLASSNAME PARSTART fields PAREND . TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND

    TYPIZATION      shift and go to state 21


state 18

    (45) fields -> field COMMA . fields
    (44) fields -> . field
    (45) fields -> . field COMMA fields
    (42) field -> . ID TYPIZATION CLASSNAME
    (43) field -> . ID TYPIZATION CLASSNAME EQUALITY transitionterm

    ID              shift and go to state 15

    field                          shift and go to state 14
    fields                         shift and go to state 22

state 19

    (42) field -> ID TYPIZATION . CLASSNAME
    (43) field -> ID TYPIZATION . CLASSNAME EQUALITY transitionterm

    CLASSNAME       shift and go to state 23


state 20

    (31) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY . CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (7) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY . BLOCKSTART enumeration BLOCKEND
    (8) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY . CLASSNAME METHOD PARSTART enumeration PAREND
    (9) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY . CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND

    CLASSNAME       shift and go to state 24
    BLOCKSTART      shift and go to state 25


state 21

    (41) classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION . CLASSNAME BLOCKSTART classbody BLOCKEND

    CLASSNAME       shift and go to state 26


state 22

    (45) fields -> field COMMA fields .

    PAREND          reduce using rule 45 (fields -> field COMMA fields .)


state 23

    (42) field -> ID TYPIZATION CLASSNAME .
    (43) field -> ID TYPIZATION CLASSNAME . EQUALITY transitionterm

    COMMA           reduce using rule 42 (field -> ID TYPIZATION CLASSNAME .)
    PAREND          reduce using rule 42 (field -> ID TYPIZATION CLASSNAME .)
    EQUALITY        shift and go to state 27


state 24

    (31) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME . METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (8) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME . METHOD PARSTART enumeration PAREND
    (9) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME . METHOD BLOCKSTART alphabetdescribebody BLOCKEND

    METHOD          shift and go to state 28


state 25

    (7) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART . enumeration BLOCKEND
    (10) enumeration -> . term
    (11) enumeration -> . term COMMA enumeration
    (12) term -> . CHAR
    (13) term -> . INT
    (14) term -> . STRING
    (15) term -> . ID
    (16) term -> . CLASSNAME PARSTART enumeration PAREND

    CHAR            shift and go to state 33
    INT             shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 29
    CLASSNAME       shift and go to state 30

    enumeration                    shift and go to state 31
    term                           shift and go to state 32

state 26

    (41) classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME . BLOCKSTART classbody BLOCKEND

    BLOCKSTART      shift and go to state 36


state 27

    (43) field -> ID TYPIZATION CLASSNAME EQUALITY . transitionterm
    (20) transitionterm -> . CHAR
    (21) transitionterm -> . INT
    (22) transitionterm -> . STRING
    (23) transitionterm -> . CLASSNAME PARSTART enumeration PAREND

    CHAR            shift and go to state 39
    INT             shift and go to state 40
    STRING          shift and go to state 41
    CLASSNAME       shift and go to state 37

    transitionterm                 shift and go to state 38

state 28

    (31) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD . PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (8) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD . PARSTART enumeration PAREND
    (9) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD . BLOCKSTART alphabetdescribebody BLOCKEND

    PARSTART        shift and go to state 42
    BLOCKSTART      shift and go to state 43


state 29

    (15) term -> ID .

    COMMA           reduce using rule 15 (term -> ID .)
    BLOCKEND        reduce using rule 15 (term -> ID .)
    FROM            reduce using rule 15 (term -> ID .)
    PAREND          reduce using rule 15 (term -> ID .)


state 30

    (16) term -> CLASSNAME . PARSTART enumeration PAREND

    PARSTART        shift and go to state 44


state 31

    (7) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration . BLOCKEND

    BLOCKEND        shift and go to state 45


state 32

    (10) enumeration -> term .
    (11) enumeration -> term . COMMA enumeration

    BLOCKEND        reduce using rule 10 (enumeration -> term .)
    PAREND          reduce using rule 10 (enumeration -> term .)
    FROM            reduce using rule 10 (enumeration -> term .)
    COMMA           shift and go to state 46


state 33

    (12) term -> CHAR .

    COMMA           reduce using rule 12 (term -> CHAR .)
    BLOCKEND        reduce using rule 12 (term -> CHAR .)
    PAREND          reduce using rule 12 (term -> CHAR .)
    FROM            reduce using rule 12 (term -> CHAR .)


state 34

    (13) term -> INT .

    COMMA           reduce using rule 13 (term -> INT .)
    BLOCKEND        reduce using rule 13 (term -> INT .)
    PAREND          reduce using rule 13 (term -> INT .)
    FROM            reduce using rule 13 (term -> INT .)


state 35

    (14) term -> STRING .

    COMMA           reduce using rule 14 (term -> STRING .)
    BLOCKEND        reduce using rule 14 (term -> STRING .)
    PAREND          reduce using rule 14 (term -> STRING .)
    FROM            reduce using rule 14 (term -> STRING .)


state 36

    (41) classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART . classbody BLOCKEND
    (46) classbody -> . method
    (47) classbody -> . method classbody
    (48) method -> . OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    OVERRIDE        shift and go to state 49

    classbody                      shift and go to state 47
    method                         shift and go to state 48

state 37

    (23) transitionterm -> CLASSNAME . PARSTART enumeration PAREND

    PARSTART        shift and go to state 50


state 38

    (43) field -> ID TYPIZATION CLASSNAME EQUALITY transitionterm .

    COMMA           reduce using rule 43 (field -> ID TYPIZATION CLASSNAME EQUALITY transitionterm .)
    PAREND          reduce using rule 43 (field -> ID TYPIZATION CLASSNAME EQUALITY transitionterm .)


state 39

    (20) transitionterm -> CHAR .

    COMMA           reduce using rule 20 (transitionterm -> CHAR .)
    PAREND          reduce using rule 20 (transitionterm -> CHAR .)
    ARROW           reduce using rule 20 (transitionterm -> CHAR .)


state 40

    (21) transitionterm -> INT .

    COMMA           reduce using rule 21 (transitionterm -> INT .)
    PAREND          reduce using rule 21 (transitionterm -> INT .)
    ARROW           reduce using rule 21 (transitionterm -> INT .)


state 41

    (22) transitionterm -> STRING .

    COMMA           reduce using rule 22 (transitionterm -> STRING .)
    PAREND          reduce using rule 22 (transitionterm -> STRING .)
    ARROW           reduce using rule 22 (transitionterm -> STRING .)


state 42

    (31) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART . ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (8) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART . enumeration PAREND
    (10) enumeration -> . term
    (11) enumeration -> . term COMMA enumeration
    (12) term -> . CHAR
    (13) term -> . INT
    (14) term -> . STRING
    (15) term -> . ID
    (16) term -> . CLASSNAME PARSTART enumeration PAREND

    ID              shift and go to state 51
    CHAR            shift and go to state 33
    INT             shift and go to state 34
    STRING          shift and go to state 35
    CLASSNAME       shift and go to state 30

    enumeration                    shift and go to state 52
    term                           shift and go to state 32

state 43

    (9) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART . alphabetdescribebody BLOCKEND
    (17) alphabetdescribebody -> . paramsdescribe
    (18) alphabetdescribebody -> . paramsdescribe COMMA alphabetdescribebody
    (19) paramsdescribe -> . enumeration FROM ID
    (10) enumeration -> . term
    (11) enumeration -> . term COMMA enumeration
    (12) term -> . CHAR
    (13) term -> . INT
    (14) term -> . STRING
    (15) term -> . ID
    (16) term -> . CLASSNAME PARSTART enumeration PAREND

    CHAR            shift and go to state 33
    INT             shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 29
    CLASSNAME       shift and go to state 30

    alphabetdescribebody           shift and go to state 53
    paramsdescribe                 shift and go to state 54
    enumeration                    shift and go to state 55
    term                           shift and go to state 32

state 44

    (16) term -> CLASSNAME PARSTART . enumeration PAREND
    (10) enumeration -> . term
    (11) enumeration -> . term COMMA enumeration
    (12) term -> . CHAR
    (13) term -> . INT
    (14) term -> . STRING
    (15) term -> . ID
    (16) term -> . CLASSNAME PARSTART enumeration PAREND

    CHAR            shift and go to state 33
    INT             shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 29
    CLASSNAME       shift and go to state 30

    enumeration                    shift and go to state 56
    term                           shift and go to state 32

state 45

    (7) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND .

    CLASS           reduce using rule 7 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND .)
    DEF             reduce using rule 7 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND .)
    $end            reduce using rule 7 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND .)


state 46

    (11) enumeration -> term COMMA . enumeration
    (10) enumeration -> . term
    (11) enumeration -> . term COMMA enumeration
    (12) term -> . CHAR
    (13) term -> . INT
    (14) term -> . STRING
    (15) term -> . ID
    (16) term -> . CLASSNAME PARSTART enumeration PAREND

    CHAR            shift and go to state 33
    INT             shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 29
    CLASSNAME       shift and go to state 30

    term                           shift and go to state 32
    enumeration                    shift and go to state 57

state 47

    (41) classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody . BLOCKEND

    BLOCKEND        shift and go to state 58


state 48

    (46) classbody -> method .
    (47) classbody -> method . classbody
    (46) classbody -> . method
    (47) classbody -> . method classbody
    (48) method -> . OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    BLOCKEND        reduce using rule 46 (classbody -> method .)
    OVERRIDE        shift and go to state 49

    method                         shift and go to state 48
    classbody                      shift and go to state 59

state 49

    (48) method -> OVERRIDE . FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    FUN             shift and go to state 60


state 50

    (23) transitionterm -> CLASSNAME PARSTART . enumeration PAREND
    (10) enumeration -> . term
    (11) enumeration -> . term COMMA enumeration
    (12) term -> . CHAR
    (13) term -> . INT
    (14) term -> . STRING
    (15) term -> . ID
    (16) term -> . CLASSNAME PARSTART enumeration PAREND

    CHAR            shift and go to state 33
    INT             shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 29
    CLASSNAME       shift and go to state 30

    enumeration                    shift and go to state 61
    term                           shift and go to state 32

state 51

    (31) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID . PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (15) term -> ID .

  ! shift/reduce conflict for PAREND resolved as shift
    PAREND          shift and go to state 62
    COMMA           reduce using rule 15 (term -> ID .)

  ! PAREND          [ reduce using rule 15 (term -> ID .) ]


state 52

    (8) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration . PAREND

    PAREND          shift and go to state 63


state 53

    (9) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody . BLOCKEND

    BLOCKEND        shift and go to state 64


state 54

    (17) alphabetdescribebody -> paramsdescribe .
    (18) alphabetdescribebody -> paramsdescribe . COMMA alphabetdescribebody

    BLOCKEND        reduce using rule 17 (alphabetdescribebody -> paramsdescribe .)
    COMMA           shift and go to state 65


state 55

    (19) paramsdescribe -> enumeration . FROM ID

    FROM            shift and go to state 66


state 56

    (16) term -> CLASSNAME PARSTART enumeration . PAREND

    PAREND          shift and go to state 67


state 57

    (11) enumeration -> term COMMA enumeration .

    BLOCKEND        reduce using rule 11 (enumeration -> term COMMA enumeration .)
    PAREND          reduce using rule 11 (enumeration -> term COMMA enumeration .)
    FROM            reduce using rule 11 (enumeration -> term COMMA enumeration .)


state 58

    (41) classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND .

    CLASS           reduce using rule 41 (classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND .)
    DEF             reduce using rule 41 (classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND .)
    $end            reduce using rule 41 (classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND .)


state 59

    (47) classbody -> method classbody .

    BLOCKEND        reduce using rule 47 (classbody -> method classbody .)


state 60

    (48) method -> OVERRIDE FUN . ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    ID              shift and go to state 68


state 61

    (23) transitionterm -> CLASSNAME PARSTART enumeration . PAREND

    PAREND          shift and go to state 69


state 62

    (31) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND . METHOD BLOCKSTART automatondescribebody BLOCKEND

    METHOD          shift and go to state 70


state 63

    (8) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND .

    CLASS           reduce using rule 8 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND .)
    DEF             reduce using rule 8 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND .)
    $end            reduce using rule 8 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND .)


state 64

    (9) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND .

    CLASS           reduce using rule 9 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND .)
    DEF             reduce using rule 9 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND .)
    $end            reduce using rule 9 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND .)


state 65

    (18) alphabetdescribebody -> paramsdescribe COMMA . alphabetdescribebody
    (17) alphabetdescribebody -> . paramsdescribe
    (18) alphabetdescribebody -> . paramsdescribe COMMA alphabetdescribebody
    (19) paramsdescribe -> . enumeration FROM ID
    (10) enumeration -> . term
    (11) enumeration -> . term COMMA enumeration
    (12) term -> . CHAR
    (13) term -> . INT
    (14) term -> . STRING
    (15) term -> . ID
    (16) term -> . CLASSNAME PARSTART enumeration PAREND

    CHAR            shift and go to state 33
    INT             shift and go to state 34
    STRING          shift and go to state 35
    ID              shift and go to state 29
    CLASSNAME       shift and go to state 30

    paramsdescribe                 shift and go to state 54
    alphabetdescribebody           shift and go to state 71
    enumeration                    shift and go to state 55
    term                           shift and go to state 32

state 66

    (19) paramsdescribe -> enumeration FROM . ID

    ID              shift and go to state 72


state 67

    (16) term -> CLASSNAME PARSTART enumeration PAREND .

    COMMA           reduce using rule 16 (term -> CLASSNAME PARSTART enumeration PAREND .)
    BLOCKEND        reduce using rule 16 (term -> CLASSNAME PARSTART enumeration PAREND .)
    PAREND          reduce using rule 16 (term -> CLASSNAME PARSTART enumeration PAREND .)
    FROM            reduce using rule 16 (term -> CLASSNAME PARSTART enumeration PAREND .)


state 68

    (48) method -> OVERRIDE FUN ID . PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    PARSTART        shift and go to state 73


state 69

    (23) transitionterm -> CLASSNAME PARSTART enumeration PAREND .

    COMMA           reduce using rule 23 (transitionterm -> CLASSNAME PARSTART enumeration PAREND .)
    PAREND          reduce using rule 23 (transitionterm -> CLASSNAME PARSTART enumeration PAREND .)
    ARROW           reduce using rule 23 (transitionterm -> CLASSNAME PARSTART enumeration PAREND .)


state 70

    (31) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD . BLOCKSTART automatondescribebody BLOCKEND

    BLOCKSTART      shift and go to state 74


state 71

    (18) alphabetdescribebody -> paramsdescribe COMMA alphabetdescribebody .

    BLOCKEND        reduce using rule 18 (alphabetdescribebody -> paramsdescribe COMMA alphabetdescribebody .)


state 72

    (19) paramsdescribe -> enumeration FROM ID .

    COMMA           reduce using rule 19 (paramsdescribe -> enumeration FROM ID .)
    BLOCKEND        reduce using rule 19 (paramsdescribe -> enumeration FROM ID .)


state 73

    (48) method -> OVERRIDE FUN ID PARSTART . fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND
    (44) fields -> . field
    (45) fields -> . field COMMA fields
    (42) field -> . ID TYPIZATION CLASSNAME
    (43) field -> . ID TYPIZATION CLASSNAME EQUALITY transitionterm

    ID              shift and go to state 15

    fields                         shift and go to state 75
    field                          shift and go to state 14

state 74

    (31) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART . automatondescribebody BLOCKEND
    (32) automatondescribebody -> . START statedescription states TERMINAL BLOCKSTART termstates BLOCKEND

    START           shift and go to state 77

    automatondescribebody          shift and go to state 76

state 75

    (48) method -> OVERRIDE FUN ID PARSTART fields . PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    PAREND          shift and go to state 78


state 76

    (31) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody . BLOCKEND

    BLOCKEND        shift and go to state 79


state 77

    (32) automatondescribebody -> START . statedescription states TERMINAL BLOCKSTART termstates BLOCKEND
    (33) statedescription -> . transition statedescription
    (34) statedescription -> . transition
    (28) transition -> . transitionterm ARROW ID
    (29) transition -> . transitionkeyword ARROW ID
    (30) transition -> . transitionkeyword ARROW transitionkeyword
    (20) transitionterm -> . CHAR
    (21) transitionterm -> . INT
    (22) transitionterm -> . STRING
    (23) transitionterm -> . CLASSNAME PARSTART enumeration PAREND
    (24) transitionkeyword -> . ELSE
    (25) transitionkeyword -> . DEADEND
    (26) transitionkeyword -> . ALPHABET
    (27) transitionkeyword -> . ITSELF

    CHAR            shift and go to state 39
    INT             shift and go to state 40
    STRING          shift and go to state 41
    CLASSNAME       shift and go to state 37
    ELSE            shift and go to state 84
    DEADEND         shift and go to state 85
    ALPHABET        shift and go to state 86
    ITSELF          shift and go to state 87

    statedescription               shift and go to state 80
    transition                     shift and go to state 81
    transitionterm                 shift and go to state 82
    transitionkeyword              shift and go to state 83

state 78

    (48) method -> OVERRIDE FUN ID PARSTART fields PAREND . TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    TYPIZATION      shift and go to state 88


state 79

    (31) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND .

    CLASS           reduce using rule 31 (automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND .)
    DEF             reduce using rule 31 (automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND .)
    $end            reduce using rule 31 (automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND .)


state 80

    (32) automatondescribebody -> START statedescription . states TERMINAL BLOCKSTART termstates BLOCKEND
    (35) states -> . states ID statedescription
    (36) states -> . ID statedescription
    (37) states -> . empty
    (6) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 90
    TERMINAL        reduce using rule 6 (empty -> .)

  ! ID              [ reduce using rule 6 (empty -> .) ]

    states                         shift and go to state 89
    empty                          shift and go to state 91

state 81

    (33) statedescription -> transition . statedescription
    (34) statedescription -> transition .
    (33) statedescription -> . transition statedescription
    (34) statedescription -> . transition
    (28) transition -> . transitionterm ARROW ID
    (29) transition -> . transitionkeyword ARROW ID
    (30) transition -> . transitionkeyword ARROW transitionkeyword
    (20) transitionterm -> . CHAR
    (21) transitionterm -> . INT
    (22) transitionterm -> . STRING
    (23) transitionterm -> . CLASSNAME PARSTART enumeration PAREND
    (24) transitionkeyword -> . ELSE
    (25) transitionkeyword -> . DEADEND
    (26) transitionkeyword -> . ALPHABET
    (27) transitionkeyword -> . ITSELF

    ID              reduce using rule 34 (statedescription -> transition .)
    TERMINAL        reduce using rule 34 (statedescription -> transition .)
    BLOCKEND        reduce using rule 34 (statedescription -> transition .)
    CHAR            shift and go to state 39
    INT             shift and go to state 40
    STRING          shift and go to state 41
    CLASSNAME       shift and go to state 37
    ELSE            shift and go to state 84
    DEADEND         shift and go to state 85
    ALPHABET        shift and go to state 86
    ITSELF          shift and go to state 87

    transition                     shift and go to state 81
    statedescription               shift and go to state 92
    transitionterm                 shift and go to state 82
    transitionkeyword              shift and go to state 83

state 82

    (28) transition -> transitionterm . ARROW ID

    ARROW           shift and go to state 93


state 83

    (29) transition -> transitionkeyword . ARROW ID
    (30) transition -> transitionkeyword . ARROW transitionkeyword

    ARROW           shift and go to state 94


state 84

    (24) transitionkeyword -> ELSE .

    ARROW           reduce using rule 24 (transitionkeyword -> ELSE .)
    CHAR            reduce using rule 24 (transitionkeyword -> ELSE .)
    INT             reduce using rule 24 (transitionkeyword -> ELSE .)
    STRING          reduce using rule 24 (transitionkeyword -> ELSE .)
    CLASSNAME       reduce using rule 24 (transitionkeyword -> ELSE .)
    ELSE            reduce using rule 24 (transitionkeyword -> ELSE .)
    DEADEND         reduce using rule 24 (transitionkeyword -> ELSE .)
    ALPHABET        reduce using rule 24 (transitionkeyword -> ELSE .)
    ITSELF          reduce using rule 24 (transitionkeyword -> ELSE .)
    ID              reduce using rule 24 (transitionkeyword -> ELSE .)
    TERMINAL        reduce using rule 24 (transitionkeyword -> ELSE .)
    BLOCKEND        reduce using rule 24 (transitionkeyword -> ELSE .)


state 85

    (25) transitionkeyword -> DEADEND .

    ARROW           reduce using rule 25 (transitionkeyword -> DEADEND .)
    CHAR            reduce using rule 25 (transitionkeyword -> DEADEND .)
    INT             reduce using rule 25 (transitionkeyword -> DEADEND .)
    STRING          reduce using rule 25 (transitionkeyword -> DEADEND .)
    CLASSNAME       reduce using rule 25 (transitionkeyword -> DEADEND .)
    ELSE            reduce using rule 25 (transitionkeyword -> DEADEND .)
    DEADEND         reduce using rule 25 (transitionkeyword -> DEADEND .)
    ALPHABET        reduce using rule 25 (transitionkeyword -> DEADEND .)
    ITSELF          reduce using rule 25 (transitionkeyword -> DEADEND .)
    ID              reduce using rule 25 (transitionkeyword -> DEADEND .)
    TERMINAL        reduce using rule 25 (transitionkeyword -> DEADEND .)
    BLOCKEND        reduce using rule 25 (transitionkeyword -> DEADEND .)


state 86

    (26) transitionkeyword -> ALPHABET .

    ARROW           reduce using rule 26 (transitionkeyword -> ALPHABET .)
    CHAR            reduce using rule 26 (transitionkeyword -> ALPHABET .)
    INT             reduce using rule 26 (transitionkeyword -> ALPHABET .)
    STRING          reduce using rule 26 (transitionkeyword -> ALPHABET .)
    CLASSNAME       reduce using rule 26 (transitionkeyword -> ALPHABET .)
    ELSE            reduce using rule 26 (transitionkeyword -> ALPHABET .)
    DEADEND         reduce using rule 26 (transitionkeyword -> ALPHABET .)
    ALPHABET        reduce using rule 26 (transitionkeyword -> ALPHABET .)
    ITSELF          reduce using rule 26 (transitionkeyword -> ALPHABET .)
    ID              reduce using rule 26 (transitionkeyword -> ALPHABET .)
    TERMINAL        reduce using rule 26 (transitionkeyword -> ALPHABET .)
    BLOCKEND        reduce using rule 26 (transitionkeyword -> ALPHABET .)


state 87

    (27) transitionkeyword -> ITSELF .

    ARROW           reduce using rule 27 (transitionkeyword -> ITSELF .)
    CHAR            reduce using rule 27 (transitionkeyword -> ITSELF .)
    INT             reduce using rule 27 (transitionkeyword -> ITSELF .)
    STRING          reduce using rule 27 (transitionkeyword -> ITSELF .)
    CLASSNAME       reduce using rule 27 (transitionkeyword -> ITSELF .)
    ELSE            reduce using rule 27 (transitionkeyword -> ITSELF .)
    DEADEND         reduce using rule 27 (transitionkeyword -> ITSELF .)
    ALPHABET        reduce using rule 27 (transitionkeyword -> ITSELF .)
    ITSELF          reduce using rule 27 (transitionkeyword -> ITSELF .)
    ID              reduce using rule 27 (transitionkeyword -> ITSELF .)
    TERMINAL        reduce using rule 27 (transitionkeyword -> ITSELF .)
    BLOCKEND        reduce using rule 27 (transitionkeyword -> ITSELF .)


state 88

    (48) method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION . CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    CLASSNAME       shift and go to state 95


state 89

    (32) automatondescribebody -> START statedescription states . TERMINAL BLOCKSTART termstates BLOCKEND
    (35) states -> states . ID statedescription

    TERMINAL        shift and go to state 96
    ID              shift and go to state 97


state 90

    (36) states -> ID . statedescription
    (33) statedescription -> . transition statedescription
    (34) statedescription -> . transition
    (28) transition -> . transitionterm ARROW ID
    (29) transition -> . transitionkeyword ARROW ID
    (30) transition -> . transitionkeyword ARROW transitionkeyword
    (20) transitionterm -> . CHAR
    (21) transitionterm -> . INT
    (22) transitionterm -> . STRING
    (23) transitionterm -> . CLASSNAME PARSTART enumeration PAREND
    (24) transitionkeyword -> . ELSE
    (25) transitionkeyword -> . DEADEND
    (26) transitionkeyword -> . ALPHABET
    (27) transitionkeyword -> . ITSELF

    CHAR            shift and go to state 39
    INT             shift and go to state 40
    STRING          shift and go to state 41
    CLASSNAME       shift and go to state 37
    ELSE            shift and go to state 84
    DEADEND         shift and go to state 85
    ALPHABET        shift and go to state 86
    ITSELF          shift and go to state 87

    statedescription               shift and go to state 98
    transition                     shift and go to state 81
    transitionterm                 shift and go to state 82
    transitionkeyword              shift and go to state 83

state 91

    (37) states -> empty .

    TERMINAL        reduce using rule 37 (states -> empty .)
    ID              reduce using rule 37 (states -> empty .)


state 92

    (33) statedescription -> transition statedescription .

    ID              reduce using rule 33 (statedescription -> transition statedescription .)
    TERMINAL        reduce using rule 33 (statedescription -> transition statedescription .)
    BLOCKEND        reduce using rule 33 (statedescription -> transition statedescription .)


state 93

    (28) transition -> transitionterm ARROW . ID

    ID              shift and go to state 99


state 94

    (29) transition -> transitionkeyword ARROW . ID
    (30) transition -> transitionkeyword ARROW . transitionkeyword
    (24) transitionkeyword -> . ELSE
    (25) transitionkeyword -> . DEADEND
    (26) transitionkeyword -> . ALPHABET
    (27) transitionkeyword -> . ITSELF

    ID              shift and go to state 101
    ELSE            shift and go to state 84
    DEADEND         shift and go to state 85
    ALPHABET        shift and go to state 86
    ITSELF          shift and go to state 87

    transitionkeyword              shift and go to state 100

state 95

    (48) method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME . BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    BLOCKSTART      shift and go to state 102


state 96

    (32) automatondescribebody -> START statedescription states TERMINAL . BLOCKSTART termstates BLOCKEND

    BLOCKSTART      shift and go to state 103


state 97

    (35) states -> states ID . statedescription
    (33) statedescription -> . transition statedescription
    (34) statedescription -> . transition
    (28) transition -> . transitionterm ARROW ID
    (29) transition -> . transitionkeyword ARROW ID
    (30) transition -> . transitionkeyword ARROW transitionkeyword
    (20) transitionterm -> . CHAR
    (21) transitionterm -> . INT
    (22) transitionterm -> . STRING
    (23) transitionterm -> . CLASSNAME PARSTART enumeration PAREND
    (24) transitionkeyword -> . ELSE
    (25) transitionkeyword -> . DEADEND
    (26) transitionkeyword -> . ALPHABET
    (27) transitionkeyword -> . ITSELF

    CHAR            shift and go to state 39
    INT             shift and go to state 40
    STRING          shift and go to state 41
    CLASSNAME       shift and go to state 37
    ELSE            shift and go to state 84
    DEADEND         shift and go to state 85
    ALPHABET        shift and go to state 86
    ITSELF          shift and go to state 87

    statedescription               shift and go to state 104
    transition                     shift and go to state 81
    transitionterm                 shift and go to state 82
    transitionkeyword              shift and go to state 83

state 98

    (36) states -> ID statedescription .

    TERMINAL        reduce using rule 36 (states -> ID statedescription .)
    ID              reduce using rule 36 (states -> ID statedescription .)


state 99

    (28) transition -> transitionterm ARROW ID .

    CHAR            reduce using rule 28 (transition -> transitionterm ARROW ID .)
    INT             reduce using rule 28 (transition -> transitionterm ARROW ID .)
    STRING          reduce using rule 28 (transition -> transitionterm ARROW ID .)
    CLASSNAME       reduce using rule 28 (transition -> transitionterm ARROW ID .)
    ELSE            reduce using rule 28 (transition -> transitionterm ARROW ID .)
    DEADEND         reduce using rule 28 (transition -> transitionterm ARROW ID .)
    ALPHABET        reduce using rule 28 (transition -> transitionterm ARROW ID .)
    ITSELF          reduce using rule 28 (transition -> transitionterm ARROW ID .)
    ID              reduce using rule 28 (transition -> transitionterm ARROW ID .)
    TERMINAL        reduce using rule 28 (transition -> transitionterm ARROW ID .)
    BLOCKEND        reduce using rule 28 (transition -> transitionterm ARROW ID .)


state 100

    (30) transition -> transitionkeyword ARROW transitionkeyword .

    CHAR            reduce using rule 30 (transition -> transitionkeyword ARROW transitionkeyword .)
    INT             reduce using rule 30 (transition -> transitionkeyword ARROW transitionkeyword .)
    STRING          reduce using rule 30 (transition -> transitionkeyword ARROW transitionkeyword .)
    CLASSNAME       reduce using rule 30 (transition -> transitionkeyword ARROW transitionkeyword .)
    ELSE            reduce using rule 30 (transition -> transitionkeyword ARROW transitionkeyword .)
    DEADEND         reduce using rule 30 (transition -> transitionkeyword ARROW transitionkeyword .)
    ALPHABET        reduce using rule 30 (transition -> transitionkeyword ARROW transitionkeyword .)
    ITSELF          reduce using rule 30 (transition -> transitionkeyword ARROW transitionkeyword .)
    ID              reduce using rule 30 (transition -> transitionkeyword ARROW transitionkeyword .)
    TERMINAL        reduce using rule 30 (transition -> transitionkeyword ARROW transitionkeyword .)
    BLOCKEND        reduce using rule 30 (transition -> transitionkeyword ARROW transitionkeyword .)


state 101

    (29) transition -> transitionkeyword ARROW ID .

    CHAR            reduce using rule 29 (transition -> transitionkeyword ARROW ID .)
    INT             reduce using rule 29 (transition -> transitionkeyword ARROW ID .)
    STRING          reduce using rule 29 (transition -> transitionkeyword ARROW ID .)
    CLASSNAME       reduce using rule 29 (transition -> transitionkeyword ARROW ID .)
    ELSE            reduce using rule 29 (transition -> transitionkeyword ARROW ID .)
    DEADEND         reduce using rule 29 (transition -> transitionkeyword ARROW ID .)
    ALPHABET        reduce using rule 29 (transition -> transitionkeyword ARROW ID .)
    ITSELF          reduce using rule 29 (transition -> transitionkeyword ARROW ID .)
    ID              reduce using rule 29 (transition -> transitionkeyword ARROW ID .)
    TERMINAL        reduce using rule 29 (transition -> transitionkeyword ARROW ID .)
    BLOCKEND        reduce using rule 29 (transition -> transitionkeyword ARROW ID .)


state 102

    (48) method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART . RETURN PARSTART logicoperations PAREND BLOCKEND

    RETURN          shift and go to state 105


state 103

    (32) automatondescribebody -> START statedescription states TERMINAL BLOCKSTART . termstates BLOCKEND
    (38) termstates -> . termstates ID statedescription
    (39) termstates -> . ID statedescription
    (40) termstates -> . empty
    (6) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 107
    BLOCKEND        reduce using rule 6 (empty -> .)

  ! ID              [ reduce using rule 6 (empty -> .) ]

    termstates                     shift and go to state 106
    empty                          shift and go to state 108

state 104

    (35) states -> states ID statedescription .

    TERMINAL        reduce using rule 35 (states -> states ID statedescription .)
    ID              reduce using rule 35 (states -> states ID statedescription .)


state 105

    (48) method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN . PARSTART logicoperations PAREND BLOCKEND

    PARSTART        shift and go to state 109


state 106

    (32) automatondescribebody -> START statedescription states TERMINAL BLOCKSTART termstates . BLOCKEND
    (38) termstates -> termstates . ID statedescription

    BLOCKEND        shift and go to state 110
    ID              shift and go to state 111


state 107

    (39) termstates -> ID . statedescription
    (33) statedescription -> . transition statedescription
    (34) statedescription -> . transition
    (28) transition -> . transitionterm ARROW ID
    (29) transition -> . transitionkeyword ARROW ID
    (30) transition -> . transitionkeyword ARROW transitionkeyword
    (20) transitionterm -> . CHAR
    (21) transitionterm -> . INT
    (22) transitionterm -> . STRING
    (23) transitionterm -> . CLASSNAME PARSTART enumeration PAREND
    (24) transitionkeyword -> . ELSE
    (25) transitionkeyword -> . DEADEND
    (26) transitionkeyword -> . ALPHABET
    (27) transitionkeyword -> . ITSELF

    CHAR            shift and go to state 39
    INT             shift and go to state 40
    STRING          shift and go to state 41
    CLASSNAME       shift and go to state 37
    ELSE            shift and go to state 84
    DEADEND         shift and go to state 85
    ALPHABET        shift and go to state 86
    ITSELF          shift and go to state 87

    statedescription               shift and go to state 112
    transition                     shift and go to state 81
    transitionterm                 shift and go to state 82
    transitionkeyword              shift and go to state 83

state 108

    (40) termstates -> empty .

    BLOCKEND        reduce using rule 40 (termstates -> empty .)
    ID              reduce using rule 40 (termstates -> empty .)


state 109

    (48) method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART . logicoperations PAREND BLOCKEND
    (50) logicoperations -> . compareoperation
    (51) logicoperations -> . PARSTART logicoperations PAREND
    (52) logicoperations -> . logicoperations LOGICOPERATOR PARSTART compareoperation PAREND
    (49) compareoperation -> . ID METHOD COMPAREOPERATOR ID METHOD

    PARSTART        shift and go to state 114
    ID              shift and go to state 113

    logicoperations                shift and go to state 115
    compareoperation               shift and go to state 116

state 110

    (32) automatondescribebody -> START statedescription states TERMINAL BLOCKSTART termstates BLOCKEND .

    BLOCKEND        reduce using rule 32 (automatondescribebody -> START statedescription states TERMINAL BLOCKSTART termstates BLOCKEND .)


state 111

    (38) termstates -> termstates ID . statedescription
    (33) statedescription -> . transition statedescription
    (34) statedescription -> . transition
    (28) transition -> . transitionterm ARROW ID
    (29) transition -> . transitionkeyword ARROW ID
    (30) transition -> . transitionkeyword ARROW transitionkeyword
    (20) transitionterm -> . CHAR
    (21) transitionterm -> . INT
    (22) transitionterm -> . STRING
    (23) transitionterm -> . CLASSNAME PARSTART enumeration PAREND
    (24) transitionkeyword -> . ELSE
    (25) transitionkeyword -> . DEADEND
    (26) transitionkeyword -> . ALPHABET
    (27) transitionkeyword -> . ITSELF

    CHAR            shift and go to state 39
    INT             shift and go to state 40
    STRING          shift and go to state 41
    CLASSNAME       shift and go to state 37
    ELSE            shift and go to state 84
    DEADEND         shift and go to state 85
    ALPHABET        shift and go to state 86
    ITSELF          shift and go to state 87

    statedescription               shift and go to state 117
    transition                     shift and go to state 81
    transitionterm                 shift and go to state 82
    transitionkeyword              shift and go to state 83

state 112

    (39) termstates -> ID statedescription .

    BLOCKEND        reduce using rule 39 (termstates -> ID statedescription .)
    ID              reduce using rule 39 (termstates -> ID statedescription .)


state 113

    (49) compareoperation -> ID . METHOD COMPAREOPERATOR ID METHOD

    METHOD          shift and go to state 118


state 114

    (51) logicoperations -> PARSTART . logicoperations PAREND
    (50) logicoperations -> . compareoperation
    (51) logicoperations -> . PARSTART logicoperations PAREND
    (52) logicoperations -> . logicoperations LOGICOPERATOR PARSTART compareoperation PAREND
    (49) compareoperation -> . ID METHOD COMPAREOPERATOR ID METHOD

    PARSTART        shift and go to state 114
    ID              shift and go to state 113

    logicoperations                shift and go to state 119
    compareoperation               shift and go to state 116

state 115

    (48) method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations . PAREND BLOCKEND
    (52) logicoperations -> logicoperations . LOGICOPERATOR PARSTART compareoperation PAREND

    PAREND          shift and go to state 120
    LOGICOPERATOR   shift and go to state 121


state 116

    (50) logicoperations -> compareoperation .

    PAREND          reduce using rule 50 (logicoperations -> compareoperation .)
    LOGICOPERATOR   reduce using rule 50 (logicoperations -> compareoperation .)


state 117

    (38) termstates -> termstates ID statedescription .

    BLOCKEND        reduce using rule 38 (termstates -> termstates ID statedescription .)
    ID              reduce using rule 38 (termstates -> termstates ID statedescription .)


state 118

    (49) compareoperation -> ID METHOD . COMPAREOPERATOR ID METHOD

    COMPAREOPERATOR shift and go to state 122


state 119

    (51) logicoperations -> PARSTART logicoperations . PAREND
    (52) logicoperations -> logicoperations . LOGICOPERATOR PARSTART compareoperation PAREND

    PAREND          shift and go to state 123
    LOGICOPERATOR   shift and go to state 121


state 120

    (48) method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND . BLOCKEND

    BLOCKEND        shift and go to state 124


state 121

    (52) logicoperations -> logicoperations LOGICOPERATOR . PARSTART compareoperation PAREND

    PARSTART        shift and go to state 125


state 122

    (49) compareoperation -> ID METHOD COMPAREOPERATOR . ID METHOD

    ID              shift and go to state 126


state 123

    (51) logicoperations -> PARSTART logicoperations PAREND .

    PAREND          reduce using rule 51 (logicoperations -> PARSTART logicoperations PAREND .)
    LOGICOPERATOR   reduce using rule 51 (logicoperations -> PARSTART logicoperations PAREND .)


state 124

    (48) method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND .

    OVERRIDE        reduce using rule 48 (method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND .)
    BLOCKEND        reduce using rule 48 (method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND .)


state 125

    (52) logicoperations -> logicoperations LOGICOPERATOR PARSTART . compareoperation PAREND
    (49) compareoperation -> . ID METHOD COMPAREOPERATOR ID METHOD

    ID              shift and go to state 113

    compareoperation               shift and go to state 127

state 126

    (49) compareoperation -> ID METHOD COMPAREOPERATOR ID . METHOD

    METHOD          shift and go to state 128


state 127

    (52) logicoperations -> logicoperations LOGICOPERATOR PARSTART compareoperation . PAREND

    PAREND          shift and go to state 129


state 128

    (49) compareoperation -> ID METHOD COMPAREOPERATOR ID METHOD .

    PAREND          reduce using rule 49 (compareoperation -> ID METHOD COMPAREOPERATOR ID METHOD .)
    LOGICOPERATOR   reduce using rule 49 (compareoperation -> ID METHOD COMPAREOPERATOR ID METHOD .)


state 129

    (52) logicoperations -> logicoperations LOGICOPERATOR PARSTART compareoperation PAREND .

    PAREND          reduce using rule 52 (logicoperations -> logicoperations LOGICOPERATOR PARSTART compareoperation PAREND .)
    LOGICOPERATOR   reduce using rule 52 (logicoperations -> logicoperations LOGICOPERATOR PARSTART compareoperation PAREND .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PAREND in state 51 resolved as shift
WARNING: shift/reduce conflict for ID in state 80 resolved as shift
WARNING: shift/reduce conflict for ID in state 103 resolved as shift
