Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programscope
Rule 1     alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND
Rule 2     alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND
Rule 3     alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND
Rule 4     enumeration -> term
Rule 5     enumeration -> term COMMA enumeration
Rule 6     term -> CHAR
Rule 7     term -> INT
Rule 8     term -> STRING
Rule 9     term -> ID
Rule 10    term -> CLASSNAME PARSTART enumeration PAREND
Rule 11    alphabetdescribebody -> paramsdescribe
Rule 12    alphabetdescribebody -> paramsdescribe COMMA alphabetdescribebody
Rule 13    paramsdescribe -> enumeration FROM ID
Rule 14    transitionterm -> CHAR
Rule 15    transitionterm -> INT
Rule 16    transitionterm -> STRING
Rule 17    transitionterm -> CLASSNAME PARSTART enumeration PAREND
Rule 18    transitionkeyword -> ELSE
Rule 19    transitionkeyword -> DEADEND
Rule 20    transitionkeyword -> ALPHABET
Rule 21    transitionkeyword -> ITSELF
Rule 22    transition -> transitionterm ARROW ID
Rule 23    transition -> transitionkeyword ARROW ID
Rule 24    transition -> transitionkeyword ARROW transitionkeyword
Rule 25    automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
Rule 26    automatondescribebody -> START statedescription states TERMINAL BLOCKSTART termstates BLOCKEND
Rule 27    statedescription -> transition statedescription
Rule 28    statedescription -> transition
Rule 29    states -> states ID statedescription
Rule 30    states -> ID statedescription
Rule 31    states -> empty
Rule 32    termstates -> termstates ID statedescription
Rule 33    termstates -> ID statedescription
Rule 34    termstates -> empty
Rule 35    classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND
Rule 36    field -> ID TYPIZATION CLASSNAME
Rule 37    field -> ID TYPIZATION CLASSNAME EQUALITY transitionterm
Rule 38    fields -> field
Rule 39    fields -> field COMMA fields
Rule 40    classbody -> method
Rule 41    classbody -> method classbody
Rule 42    method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND
Rule 43    compareoperation -> ID METHOD COMPAREOPERATOR ID METHOD
Rule 44    logicoperations -> compareoperation
Rule 45    logicoperations -> PARSTART logicoperations PAREND
Rule 46    logicoperations -> logicoperations LOGICOPERATOR PARSTART compareoperation PAREND
Rule 47    programscope -> expressions
Rule 48    programscope -> empty
Rule 49    expressions -> expression
Rule 50    expressions -> expression expressions
Rule 51    expression -> classdef
Rule 52    expression -> automaton
Rule 53    expression -> alphabet
Rule 54    empty -> <empty>

Terminals, with rules where they appear

ALPHABET             : 20
ARROW                : 22 23 24
BLOCKEND             : 1 3 25 26 35 42
BLOCKSTART           : 1 3 25 26 35 42
CHAR                 : 6 14
CLASS                : 35
CLASSNAME            : 1 2 2 3 3 10 17 25 25 35 35 36 37 42
COMMA                : 5 12 39
COMPAREOPERATOR      : 43
DEADEND              : 19
DEF                  : 1 2 3 25
ELSE                 : 18
EQUALITY             : 1 2 3 25 37
FROM                 : 13
FUN                  : 42
ID                   : 1 2 3 9 13 22 23 25 25 29 30 32 33 36 37 42 43 43
INT                  : 7 15
ITSELF               : 21
LOGICOPERATOR        : 46
METHOD               : 2 3 25 25 43 43
OVERRIDE             : 42
PAREND               : 2 10 17 25 35 42 42 45 46
PARSTART             : 2 10 17 25 35 42 42 45 46
RETURN               : 42
START                : 26
STRING               : 8 16
TERMINAL             : 26
TYPIZATION           : 1 2 3 25 35 36 37 42
error                : 

Nonterminals, with rules where they appear

alphabet             : 53
alphabetdescribebody : 3 12
automaton            : 52
automatondescribebody : 25
classbody            : 35 41
classdef             : 51
compareoperation     : 44 46
empty                : 31 34 48
enumeration          : 1 2 5 10 13 17
expression           : 49 50
expressions          : 47 50
field                : 38 39
fields               : 35 39 42
logicoperations      : 42 45 46
method               : 40 41
paramsdescribe       : 11 12
programscope         : 0
statedescription     : 26 27 29 30 32 33
states               : 26 29
term                 : 4 5
termstates           : 26 32
transition           : 27 28
transitionkeyword    : 23 24 24
transitionterm       : 22 37

Parsing method: LALR

state 0

    (0) S' -> . programscope
    (47) programscope -> . expressions
    (48) programscope -> . empty
    (49) expressions -> . expression
    (50) expressions -> . expression expressions
    (54) empty -> .
    (51) expression -> . classdef
    (52) expression -> . automaton
    (53) expression -> . alphabet
    (35) classdef -> . CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND
    (25) automaton -> . DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (1) alphabet -> . DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND
    (2) alphabet -> . DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND
    (3) alphabet -> . DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND

    $end            reduce using rule 54 (empty -> .)
    CLASS           shift and go to state 8
    DEF             shift and go to state 9

    programscope                   shift and go to state 1
    expressions                    shift and go to state 2
    empty                          shift and go to state 3
    expression                     shift and go to state 4
    classdef                       shift and go to state 5
    automaton                      shift and go to state 6
    alphabet                       shift and go to state 7

state 1

    (0) S' -> programscope .



state 2

    (47) programscope -> expressions .

    $end            reduce using rule 47 (programscope -> expressions .)


state 3

    (48) programscope -> empty .

    $end            reduce using rule 48 (programscope -> empty .)


state 4

    (49) expressions -> expression .
    (50) expressions -> expression . expressions
    (49) expressions -> . expression
    (50) expressions -> . expression expressions
    (51) expression -> . classdef
    (52) expression -> . automaton
    (53) expression -> . alphabet
    (35) classdef -> . CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND
    (25) automaton -> . DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (1) alphabet -> . DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND
    (2) alphabet -> . DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND
    (3) alphabet -> . DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND

    $end            reduce using rule 49 (expressions -> expression .)
    CLASS           shift and go to state 8
    DEF             shift and go to state 9

    expression                     shift and go to state 4
    expressions                    shift and go to state 10
    classdef                       shift and go to state 5
    automaton                      shift and go to state 6
    alphabet                       shift and go to state 7

state 5

    (51) expression -> classdef .

    CLASS           reduce using rule 51 (expression -> classdef .)
    DEF             reduce using rule 51 (expression -> classdef .)
    $end            reduce using rule 51 (expression -> classdef .)


state 6

    (52) expression -> automaton .

    CLASS           reduce using rule 52 (expression -> automaton .)
    DEF             reduce using rule 52 (expression -> automaton .)
    $end            reduce using rule 52 (expression -> automaton .)


state 7

    (53) expression -> alphabet .

    CLASS           reduce using rule 53 (expression -> alphabet .)
    DEF             reduce using rule 53 (expression -> alphabet .)
    $end            reduce using rule 53 (expression -> alphabet .)


state 8

    (35) classdef -> CLASS . CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND

    CLASSNAME       shift and go to state 11


state 9

    (25) automaton -> DEF . ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (1) alphabet -> DEF . ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND
    (2) alphabet -> DEF . ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND
    (3) alphabet -> DEF . ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND

    ID              shift and go to state 12


state 10

    (50) expressions -> expression expressions .

    $end            reduce using rule 50 (expressions -> expression expressions .)


state 11

    (35) classdef -> CLASS CLASSNAME . PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND

    PARSTART        shift and go to state 13


state 12

    (25) automaton -> DEF ID . TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (1) alphabet -> DEF ID . TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND
    (2) alphabet -> DEF ID . TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND
    (3) alphabet -> DEF ID . TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND

    TYPIZATION      shift and go to state 14


state 13

    (35) classdef -> CLASS CLASSNAME PARSTART . fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND
    (38) fields -> . field
    (39) fields -> . field COMMA fields
    (36) field -> . ID TYPIZATION CLASSNAME
    (37) field -> . ID TYPIZATION CLASSNAME EQUALITY transitionterm

    ID              shift and go to state 17

    fields                         shift and go to state 15
    field                          shift and go to state 16

state 14

    (25) automaton -> DEF ID TYPIZATION . CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (1) alphabet -> DEF ID TYPIZATION . CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND
    (2) alphabet -> DEF ID TYPIZATION . CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND
    (3) alphabet -> DEF ID TYPIZATION . CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND

    CLASSNAME       shift and go to state 18


state 15

    (35) classdef -> CLASS CLASSNAME PARSTART fields . PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND

    PAREND          shift and go to state 19


state 16

    (38) fields -> field .
    (39) fields -> field . COMMA fields

    PAREND          reduce using rule 38 (fields -> field .)
    COMMA           shift and go to state 20


state 17

    (36) field -> ID . TYPIZATION CLASSNAME
    (37) field -> ID . TYPIZATION CLASSNAME EQUALITY transitionterm

    TYPIZATION      shift and go to state 21


state 18

    (25) automaton -> DEF ID TYPIZATION CLASSNAME . EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (1) alphabet -> DEF ID TYPIZATION CLASSNAME . EQUALITY BLOCKSTART enumeration BLOCKEND
    (2) alphabet -> DEF ID TYPIZATION CLASSNAME . EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND
    (3) alphabet -> DEF ID TYPIZATION CLASSNAME . EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND

    EQUALITY        shift and go to state 22


state 19

    (35) classdef -> CLASS CLASSNAME PARSTART fields PAREND . TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND

    TYPIZATION      shift and go to state 23


state 20

    (39) fields -> field COMMA . fields
    (38) fields -> . field
    (39) fields -> . field COMMA fields
    (36) field -> . ID TYPIZATION CLASSNAME
    (37) field -> . ID TYPIZATION CLASSNAME EQUALITY transitionterm

    ID              shift and go to state 17

    field                          shift and go to state 16
    fields                         shift and go to state 24

state 21

    (36) field -> ID TYPIZATION . CLASSNAME
    (37) field -> ID TYPIZATION . CLASSNAME EQUALITY transitionterm

    CLASSNAME       shift and go to state 25


state 22

    (25) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY . CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (1) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY . BLOCKSTART enumeration BLOCKEND
    (2) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY . CLASSNAME METHOD PARSTART enumeration PAREND
    (3) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY . CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND

    CLASSNAME       shift and go to state 26
    BLOCKSTART      shift and go to state 27


state 23

    (35) classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION . CLASSNAME BLOCKSTART classbody BLOCKEND

    CLASSNAME       shift and go to state 28


state 24

    (39) fields -> field COMMA fields .

    PAREND          reduce using rule 39 (fields -> field COMMA fields .)


state 25

    (36) field -> ID TYPIZATION CLASSNAME .
    (37) field -> ID TYPIZATION CLASSNAME . EQUALITY transitionterm

    COMMA           reduce using rule 36 (field -> ID TYPIZATION CLASSNAME .)
    PAREND          reduce using rule 36 (field -> ID TYPIZATION CLASSNAME .)
    EQUALITY        shift and go to state 29


state 26

    (25) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME . METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (2) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME . METHOD PARSTART enumeration PAREND
    (3) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME . METHOD BLOCKSTART alphabetdescribebody BLOCKEND

    METHOD          shift and go to state 30


state 27

    (1) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART . enumeration BLOCKEND
    (4) enumeration -> . term
    (5) enumeration -> . term COMMA enumeration
    (6) term -> . CHAR
    (7) term -> . INT
    (8) term -> . STRING
    (9) term -> . ID
    (10) term -> . CLASSNAME PARSTART enumeration PAREND

    CHAR            shift and go to state 35
    INT             shift and go to state 36
    STRING          shift and go to state 37
    ID              shift and go to state 31
    CLASSNAME       shift and go to state 32

    enumeration                    shift and go to state 33
    term                           shift and go to state 34

state 28

    (35) classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME . BLOCKSTART classbody BLOCKEND

    BLOCKSTART      shift and go to state 38


state 29

    (37) field -> ID TYPIZATION CLASSNAME EQUALITY . transitionterm
    (14) transitionterm -> . CHAR
    (15) transitionterm -> . INT
    (16) transitionterm -> . STRING
    (17) transitionterm -> . CLASSNAME PARSTART enumeration PAREND

    CHAR            shift and go to state 41
    INT             shift and go to state 42
    STRING          shift and go to state 43
    CLASSNAME       shift and go to state 39

    transitionterm                 shift and go to state 40

state 30

    (25) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD . PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (2) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD . PARSTART enumeration PAREND
    (3) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD . BLOCKSTART alphabetdescribebody BLOCKEND

    PARSTART        shift and go to state 44
    BLOCKSTART      shift and go to state 45


state 31

    (9) term -> ID .

    COMMA           reduce using rule 9 (term -> ID .)
    BLOCKEND        reduce using rule 9 (term -> ID .)
    FROM            reduce using rule 9 (term -> ID .)
    PAREND          reduce using rule 9 (term -> ID .)


state 32

    (10) term -> CLASSNAME . PARSTART enumeration PAREND

    PARSTART        shift and go to state 46


state 33

    (1) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration . BLOCKEND

    BLOCKEND        shift and go to state 47


state 34

    (4) enumeration -> term .
    (5) enumeration -> term . COMMA enumeration

    BLOCKEND        reduce using rule 4 (enumeration -> term .)
    PAREND          reduce using rule 4 (enumeration -> term .)
    FROM            reduce using rule 4 (enumeration -> term .)
    COMMA           shift and go to state 48


state 35

    (6) term -> CHAR .

    COMMA           reduce using rule 6 (term -> CHAR .)
    BLOCKEND        reduce using rule 6 (term -> CHAR .)
    PAREND          reduce using rule 6 (term -> CHAR .)
    FROM            reduce using rule 6 (term -> CHAR .)


state 36

    (7) term -> INT .

    COMMA           reduce using rule 7 (term -> INT .)
    BLOCKEND        reduce using rule 7 (term -> INT .)
    PAREND          reduce using rule 7 (term -> INT .)
    FROM            reduce using rule 7 (term -> INT .)


state 37

    (8) term -> STRING .

    COMMA           reduce using rule 8 (term -> STRING .)
    BLOCKEND        reduce using rule 8 (term -> STRING .)
    PAREND          reduce using rule 8 (term -> STRING .)
    FROM            reduce using rule 8 (term -> STRING .)


state 38

    (35) classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART . classbody BLOCKEND
    (40) classbody -> . method
    (41) classbody -> . method classbody
    (42) method -> . OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    OVERRIDE        shift and go to state 51

    classbody                      shift and go to state 49
    method                         shift and go to state 50

state 39

    (17) transitionterm -> CLASSNAME . PARSTART enumeration PAREND

    PARSTART        shift and go to state 52


state 40

    (37) field -> ID TYPIZATION CLASSNAME EQUALITY transitionterm .

    COMMA           reduce using rule 37 (field -> ID TYPIZATION CLASSNAME EQUALITY transitionterm .)
    PAREND          reduce using rule 37 (field -> ID TYPIZATION CLASSNAME EQUALITY transitionterm .)


state 41

    (14) transitionterm -> CHAR .

    COMMA           reduce using rule 14 (transitionterm -> CHAR .)
    PAREND          reduce using rule 14 (transitionterm -> CHAR .)
    ARROW           reduce using rule 14 (transitionterm -> CHAR .)


state 42

    (15) transitionterm -> INT .

    COMMA           reduce using rule 15 (transitionterm -> INT .)
    PAREND          reduce using rule 15 (transitionterm -> INT .)
    ARROW           reduce using rule 15 (transitionterm -> INT .)


state 43

    (16) transitionterm -> STRING .

    COMMA           reduce using rule 16 (transitionterm -> STRING .)
    PAREND          reduce using rule 16 (transitionterm -> STRING .)
    ARROW           reduce using rule 16 (transitionterm -> STRING .)


state 44

    (25) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART . ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (2) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART . enumeration PAREND
    (4) enumeration -> . term
    (5) enumeration -> . term COMMA enumeration
    (6) term -> . CHAR
    (7) term -> . INT
    (8) term -> . STRING
    (9) term -> . ID
    (10) term -> . CLASSNAME PARSTART enumeration PAREND

    ID              shift and go to state 53
    CHAR            shift and go to state 35
    INT             shift and go to state 36
    STRING          shift and go to state 37
    CLASSNAME       shift and go to state 32

    enumeration                    shift and go to state 54
    term                           shift and go to state 34

state 45

    (3) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART . alphabetdescribebody BLOCKEND
    (11) alphabetdescribebody -> . paramsdescribe
    (12) alphabetdescribebody -> . paramsdescribe COMMA alphabetdescribebody
    (13) paramsdescribe -> . enumeration FROM ID
    (4) enumeration -> . term
    (5) enumeration -> . term COMMA enumeration
    (6) term -> . CHAR
    (7) term -> . INT
    (8) term -> . STRING
    (9) term -> . ID
    (10) term -> . CLASSNAME PARSTART enumeration PAREND

    CHAR            shift and go to state 35
    INT             shift and go to state 36
    STRING          shift and go to state 37
    ID              shift and go to state 31
    CLASSNAME       shift and go to state 32

    alphabetdescribebody           shift and go to state 55
    paramsdescribe                 shift and go to state 56
    enumeration                    shift and go to state 57
    term                           shift and go to state 34

state 46

    (10) term -> CLASSNAME PARSTART . enumeration PAREND
    (4) enumeration -> . term
    (5) enumeration -> . term COMMA enumeration
    (6) term -> . CHAR
    (7) term -> . INT
    (8) term -> . STRING
    (9) term -> . ID
    (10) term -> . CLASSNAME PARSTART enumeration PAREND

    CHAR            shift and go to state 35
    INT             shift and go to state 36
    STRING          shift and go to state 37
    ID              shift and go to state 31
    CLASSNAME       shift and go to state 32

    enumeration                    shift and go to state 58
    term                           shift and go to state 34

state 47

    (1) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND .

    CLASS           reduce using rule 1 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND .)
    DEF             reduce using rule 1 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND .)
    $end            reduce using rule 1 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY BLOCKSTART enumeration BLOCKEND .)


state 48

    (5) enumeration -> term COMMA . enumeration
    (4) enumeration -> . term
    (5) enumeration -> . term COMMA enumeration
    (6) term -> . CHAR
    (7) term -> . INT
    (8) term -> . STRING
    (9) term -> . ID
    (10) term -> . CLASSNAME PARSTART enumeration PAREND

    CHAR            shift and go to state 35
    INT             shift and go to state 36
    STRING          shift and go to state 37
    ID              shift and go to state 31
    CLASSNAME       shift and go to state 32

    term                           shift and go to state 34
    enumeration                    shift and go to state 59

state 49

    (35) classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody . BLOCKEND

    BLOCKEND        shift and go to state 60


state 50

    (40) classbody -> method .
    (41) classbody -> method . classbody
    (40) classbody -> . method
    (41) classbody -> . method classbody
    (42) method -> . OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    BLOCKEND        reduce using rule 40 (classbody -> method .)
    OVERRIDE        shift and go to state 51

    method                         shift and go to state 50
    classbody                      shift and go to state 61

state 51

    (42) method -> OVERRIDE . FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    FUN             shift and go to state 62


state 52

    (17) transitionterm -> CLASSNAME PARSTART . enumeration PAREND
    (4) enumeration -> . term
    (5) enumeration -> . term COMMA enumeration
    (6) term -> . CHAR
    (7) term -> . INT
    (8) term -> . STRING
    (9) term -> . ID
    (10) term -> . CLASSNAME PARSTART enumeration PAREND

    CHAR            shift and go to state 35
    INT             shift and go to state 36
    STRING          shift and go to state 37
    ID              shift and go to state 31
    CLASSNAME       shift and go to state 32

    enumeration                    shift and go to state 63
    term                           shift and go to state 34

state 53

    (25) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID . PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND
    (9) term -> ID .

  ! shift/reduce conflict for PAREND resolved as shift
    PAREND          shift and go to state 64
    COMMA           reduce using rule 9 (term -> ID .)

  ! PAREND          [ reduce using rule 9 (term -> ID .) ]


state 54

    (2) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration . PAREND

    PAREND          shift and go to state 65


state 55

    (3) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody . BLOCKEND

    BLOCKEND        shift and go to state 66


state 56

    (11) alphabetdescribebody -> paramsdescribe .
    (12) alphabetdescribebody -> paramsdescribe . COMMA alphabetdescribebody

    BLOCKEND        reduce using rule 11 (alphabetdescribebody -> paramsdescribe .)
    COMMA           shift and go to state 67


state 57

    (13) paramsdescribe -> enumeration . FROM ID

    FROM            shift and go to state 68


state 58

    (10) term -> CLASSNAME PARSTART enumeration . PAREND

    PAREND          shift and go to state 69


state 59

    (5) enumeration -> term COMMA enumeration .

    BLOCKEND        reduce using rule 5 (enumeration -> term COMMA enumeration .)
    PAREND          reduce using rule 5 (enumeration -> term COMMA enumeration .)
    FROM            reduce using rule 5 (enumeration -> term COMMA enumeration .)


state 60

    (35) classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND .

    CLASS           reduce using rule 35 (classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND .)
    DEF             reduce using rule 35 (classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND .)
    $end            reduce using rule 35 (classdef -> CLASS CLASSNAME PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART classbody BLOCKEND .)


state 61

    (41) classbody -> method classbody .

    BLOCKEND        reduce using rule 41 (classbody -> method classbody .)


state 62

    (42) method -> OVERRIDE FUN . ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    ID              shift and go to state 70


state 63

    (17) transitionterm -> CLASSNAME PARSTART enumeration . PAREND

    PAREND          shift and go to state 71


state 64

    (25) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND . METHOD BLOCKSTART automatondescribebody BLOCKEND

    METHOD          shift and go to state 72


state 65

    (2) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND .

    CLASS           reduce using rule 2 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND .)
    DEF             reduce using rule 2 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND .)
    $end            reduce using rule 2 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART enumeration PAREND .)


state 66

    (3) alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND .

    CLASS           reduce using rule 3 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND .)
    DEF             reduce using rule 3 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND .)
    $end            reduce using rule 3 (alphabet -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD BLOCKSTART alphabetdescribebody BLOCKEND .)


state 67

    (12) alphabetdescribebody -> paramsdescribe COMMA . alphabetdescribebody
    (11) alphabetdescribebody -> . paramsdescribe
    (12) alphabetdescribebody -> . paramsdescribe COMMA alphabetdescribebody
    (13) paramsdescribe -> . enumeration FROM ID
    (4) enumeration -> . term
    (5) enumeration -> . term COMMA enumeration
    (6) term -> . CHAR
    (7) term -> . INT
    (8) term -> . STRING
    (9) term -> . ID
    (10) term -> . CLASSNAME PARSTART enumeration PAREND

    CHAR            shift and go to state 35
    INT             shift and go to state 36
    STRING          shift and go to state 37
    ID              shift and go to state 31
    CLASSNAME       shift and go to state 32

    paramsdescribe                 shift and go to state 56
    alphabetdescribebody           shift and go to state 73
    enumeration                    shift and go to state 57
    term                           shift and go to state 34

state 68

    (13) paramsdescribe -> enumeration FROM . ID

    ID              shift and go to state 74


state 69

    (10) term -> CLASSNAME PARSTART enumeration PAREND .

    COMMA           reduce using rule 10 (term -> CLASSNAME PARSTART enumeration PAREND .)
    BLOCKEND        reduce using rule 10 (term -> CLASSNAME PARSTART enumeration PAREND .)
    PAREND          reduce using rule 10 (term -> CLASSNAME PARSTART enumeration PAREND .)
    FROM            reduce using rule 10 (term -> CLASSNAME PARSTART enumeration PAREND .)


state 70

    (42) method -> OVERRIDE FUN ID . PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    PARSTART        shift and go to state 75


state 71

    (17) transitionterm -> CLASSNAME PARSTART enumeration PAREND .

    COMMA           reduce using rule 17 (transitionterm -> CLASSNAME PARSTART enumeration PAREND .)
    PAREND          reduce using rule 17 (transitionterm -> CLASSNAME PARSTART enumeration PAREND .)
    ARROW           reduce using rule 17 (transitionterm -> CLASSNAME PARSTART enumeration PAREND .)


state 72

    (25) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD . BLOCKSTART automatondescribebody BLOCKEND

    BLOCKSTART      shift and go to state 76


state 73

    (12) alphabetdescribebody -> paramsdescribe COMMA alphabetdescribebody .

    BLOCKEND        reduce using rule 12 (alphabetdescribebody -> paramsdescribe COMMA alphabetdescribebody .)


state 74

    (13) paramsdescribe -> enumeration FROM ID .

    COMMA           reduce using rule 13 (paramsdescribe -> enumeration FROM ID .)
    BLOCKEND        reduce using rule 13 (paramsdescribe -> enumeration FROM ID .)


state 75

    (42) method -> OVERRIDE FUN ID PARSTART . fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND
    (38) fields -> . field
    (39) fields -> . field COMMA fields
    (36) field -> . ID TYPIZATION CLASSNAME
    (37) field -> . ID TYPIZATION CLASSNAME EQUALITY transitionterm

    ID              shift and go to state 17

    fields                         shift and go to state 77
    field                          shift and go to state 16

state 76

    (25) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART . automatondescribebody BLOCKEND
    (26) automatondescribebody -> . START statedescription states TERMINAL BLOCKSTART termstates BLOCKEND

    START           shift and go to state 79

    automatondescribebody          shift and go to state 78

state 77

    (42) method -> OVERRIDE FUN ID PARSTART fields . PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    PAREND          shift and go to state 80


state 78

    (25) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody . BLOCKEND

    BLOCKEND        shift and go to state 81


state 79

    (26) automatondescribebody -> START . statedescription states TERMINAL BLOCKSTART termstates BLOCKEND
    (27) statedescription -> . transition statedescription
    (28) statedescription -> . transition
    (22) transition -> . transitionterm ARROW ID
    (23) transition -> . transitionkeyword ARROW ID
    (24) transition -> . transitionkeyword ARROW transitionkeyword
    (14) transitionterm -> . CHAR
    (15) transitionterm -> . INT
    (16) transitionterm -> . STRING
    (17) transitionterm -> . CLASSNAME PARSTART enumeration PAREND
    (18) transitionkeyword -> . ELSE
    (19) transitionkeyword -> . DEADEND
    (20) transitionkeyword -> . ALPHABET
    (21) transitionkeyword -> . ITSELF

    CHAR            shift and go to state 41
    INT             shift and go to state 42
    STRING          shift and go to state 43
    CLASSNAME       shift and go to state 39
    ELSE            shift and go to state 86
    DEADEND         shift and go to state 87
    ALPHABET        shift and go to state 88
    ITSELF          shift and go to state 89

    statedescription               shift and go to state 82
    transition                     shift and go to state 83
    transitionterm                 shift and go to state 84
    transitionkeyword              shift and go to state 85

state 80

    (42) method -> OVERRIDE FUN ID PARSTART fields PAREND . TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    TYPIZATION      shift and go to state 90


state 81

    (25) automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND .

    CLASS           reduce using rule 25 (automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND .)
    DEF             reduce using rule 25 (automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND .)
    $end            reduce using rule 25 (automaton -> DEF ID TYPIZATION CLASSNAME EQUALITY CLASSNAME METHOD PARSTART ID PAREND METHOD BLOCKSTART automatondescribebody BLOCKEND .)


state 82

    (26) automatondescribebody -> START statedescription . states TERMINAL BLOCKSTART termstates BLOCKEND
    (29) states -> . states ID statedescription
    (30) states -> . ID statedescription
    (31) states -> . empty
    (54) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 92
    TERMINAL        reduce using rule 54 (empty -> .)

  ! ID              [ reduce using rule 54 (empty -> .) ]

    states                         shift and go to state 91
    empty                          shift and go to state 93

state 83

    (27) statedescription -> transition . statedescription
    (28) statedescription -> transition .
    (27) statedescription -> . transition statedescription
    (28) statedescription -> . transition
    (22) transition -> . transitionterm ARROW ID
    (23) transition -> . transitionkeyword ARROW ID
    (24) transition -> . transitionkeyword ARROW transitionkeyword
    (14) transitionterm -> . CHAR
    (15) transitionterm -> . INT
    (16) transitionterm -> . STRING
    (17) transitionterm -> . CLASSNAME PARSTART enumeration PAREND
    (18) transitionkeyword -> . ELSE
    (19) transitionkeyword -> . DEADEND
    (20) transitionkeyword -> . ALPHABET
    (21) transitionkeyword -> . ITSELF

    ID              reduce using rule 28 (statedescription -> transition .)
    TERMINAL        reduce using rule 28 (statedescription -> transition .)
    BLOCKEND        reduce using rule 28 (statedescription -> transition .)
    CHAR            shift and go to state 41
    INT             shift and go to state 42
    STRING          shift and go to state 43
    CLASSNAME       shift and go to state 39
    ELSE            shift and go to state 86
    DEADEND         shift and go to state 87
    ALPHABET        shift and go to state 88
    ITSELF          shift and go to state 89

    transition                     shift and go to state 83
    statedescription               shift and go to state 94
    transitionterm                 shift and go to state 84
    transitionkeyword              shift and go to state 85

state 84

    (22) transition -> transitionterm . ARROW ID

    ARROW           shift and go to state 95


state 85

    (23) transition -> transitionkeyword . ARROW ID
    (24) transition -> transitionkeyword . ARROW transitionkeyword

    ARROW           shift and go to state 96


state 86

    (18) transitionkeyword -> ELSE .

    ARROW           reduce using rule 18 (transitionkeyword -> ELSE .)
    CHAR            reduce using rule 18 (transitionkeyword -> ELSE .)
    INT             reduce using rule 18 (transitionkeyword -> ELSE .)
    STRING          reduce using rule 18 (transitionkeyword -> ELSE .)
    CLASSNAME       reduce using rule 18 (transitionkeyword -> ELSE .)
    ELSE            reduce using rule 18 (transitionkeyword -> ELSE .)
    DEADEND         reduce using rule 18 (transitionkeyword -> ELSE .)
    ALPHABET        reduce using rule 18 (transitionkeyword -> ELSE .)
    ITSELF          reduce using rule 18 (transitionkeyword -> ELSE .)
    ID              reduce using rule 18 (transitionkeyword -> ELSE .)
    TERMINAL        reduce using rule 18 (transitionkeyword -> ELSE .)
    BLOCKEND        reduce using rule 18 (transitionkeyword -> ELSE .)


state 87

    (19) transitionkeyword -> DEADEND .

    ARROW           reduce using rule 19 (transitionkeyword -> DEADEND .)
    CHAR            reduce using rule 19 (transitionkeyword -> DEADEND .)
    INT             reduce using rule 19 (transitionkeyword -> DEADEND .)
    STRING          reduce using rule 19 (transitionkeyword -> DEADEND .)
    CLASSNAME       reduce using rule 19 (transitionkeyword -> DEADEND .)
    ELSE            reduce using rule 19 (transitionkeyword -> DEADEND .)
    DEADEND         reduce using rule 19 (transitionkeyword -> DEADEND .)
    ALPHABET        reduce using rule 19 (transitionkeyword -> DEADEND .)
    ITSELF          reduce using rule 19 (transitionkeyword -> DEADEND .)
    ID              reduce using rule 19 (transitionkeyword -> DEADEND .)
    TERMINAL        reduce using rule 19 (transitionkeyword -> DEADEND .)
    BLOCKEND        reduce using rule 19 (transitionkeyword -> DEADEND .)


state 88

    (20) transitionkeyword -> ALPHABET .

    ARROW           reduce using rule 20 (transitionkeyword -> ALPHABET .)
    CHAR            reduce using rule 20 (transitionkeyword -> ALPHABET .)
    INT             reduce using rule 20 (transitionkeyword -> ALPHABET .)
    STRING          reduce using rule 20 (transitionkeyword -> ALPHABET .)
    CLASSNAME       reduce using rule 20 (transitionkeyword -> ALPHABET .)
    ELSE            reduce using rule 20 (transitionkeyword -> ALPHABET .)
    DEADEND         reduce using rule 20 (transitionkeyword -> ALPHABET .)
    ALPHABET        reduce using rule 20 (transitionkeyword -> ALPHABET .)
    ITSELF          reduce using rule 20 (transitionkeyword -> ALPHABET .)
    ID              reduce using rule 20 (transitionkeyword -> ALPHABET .)
    TERMINAL        reduce using rule 20 (transitionkeyword -> ALPHABET .)
    BLOCKEND        reduce using rule 20 (transitionkeyword -> ALPHABET .)


state 89

    (21) transitionkeyword -> ITSELF .

    ARROW           reduce using rule 21 (transitionkeyword -> ITSELF .)
    CHAR            reduce using rule 21 (transitionkeyword -> ITSELF .)
    INT             reduce using rule 21 (transitionkeyword -> ITSELF .)
    STRING          reduce using rule 21 (transitionkeyword -> ITSELF .)
    CLASSNAME       reduce using rule 21 (transitionkeyword -> ITSELF .)
    ELSE            reduce using rule 21 (transitionkeyword -> ITSELF .)
    DEADEND         reduce using rule 21 (transitionkeyword -> ITSELF .)
    ALPHABET        reduce using rule 21 (transitionkeyword -> ITSELF .)
    ITSELF          reduce using rule 21 (transitionkeyword -> ITSELF .)
    ID              reduce using rule 21 (transitionkeyword -> ITSELF .)
    TERMINAL        reduce using rule 21 (transitionkeyword -> ITSELF .)
    BLOCKEND        reduce using rule 21 (transitionkeyword -> ITSELF .)


state 90

    (42) method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION . CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    CLASSNAME       shift and go to state 97


state 91

    (26) automatondescribebody -> START statedescription states . TERMINAL BLOCKSTART termstates BLOCKEND
    (29) states -> states . ID statedescription

    TERMINAL        shift and go to state 98
    ID              shift and go to state 99


state 92

    (30) states -> ID . statedescription
    (27) statedescription -> . transition statedescription
    (28) statedescription -> . transition
    (22) transition -> . transitionterm ARROW ID
    (23) transition -> . transitionkeyword ARROW ID
    (24) transition -> . transitionkeyword ARROW transitionkeyword
    (14) transitionterm -> . CHAR
    (15) transitionterm -> . INT
    (16) transitionterm -> . STRING
    (17) transitionterm -> . CLASSNAME PARSTART enumeration PAREND
    (18) transitionkeyword -> . ELSE
    (19) transitionkeyword -> . DEADEND
    (20) transitionkeyword -> . ALPHABET
    (21) transitionkeyword -> . ITSELF

    CHAR            shift and go to state 41
    INT             shift and go to state 42
    STRING          shift and go to state 43
    CLASSNAME       shift and go to state 39
    ELSE            shift and go to state 86
    DEADEND         shift and go to state 87
    ALPHABET        shift and go to state 88
    ITSELF          shift and go to state 89

    statedescription               shift and go to state 100
    transition                     shift and go to state 83
    transitionterm                 shift and go to state 84
    transitionkeyword              shift and go to state 85

state 93

    (31) states -> empty .

    TERMINAL        reduce using rule 31 (states -> empty .)
    ID              reduce using rule 31 (states -> empty .)


state 94

    (27) statedescription -> transition statedescription .

    ID              reduce using rule 27 (statedescription -> transition statedescription .)
    TERMINAL        reduce using rule 27 (statedescription -> transition statedescription .)
    BLOCKEND        reduce using rule 27 (statedescription -> transition statedescription .)


state 95

    (22) transition -> transitionterm ARROW . ID

    ID              shift and go to state 101


state 96

    (23) transition -> transitionkeyword ARROW . ID
    (24) transition -> transitionkeyword ARROW . transitionkeyword
    (18) transitionkeyword -> . ELSE
    (19) transitionkeyword -> . DEADEND
    (20) transitionkeyword -> . ALPHABET
    (21) transitionkeyword -> . ITSELF

    ID              shift and go to state 103
    ELSE            shift and go to state 86
    DEADEND         shift and go to state 87
    ALPHABET        shift and go to state 88
    ITSELF          shift and go to state 89

    transitionkeyword              shift and go to state 102

state 97

    (42) method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME . BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND

    BLOCKSTART      shift and go to state 104


state 98

    (26) automatondescribebody -> START statedescription states TERMINAL . BLOCKSTART termstates BLOCKEND

    BLOCKSTART      shift and go to state 105


state 99

    (29) states -> states ID . statedescription
    (27) statedescription -> . transition statedescription
    (28) statedescription -> . transition
    (22) transition -> . transitionterm ARROW ID
    (23) transition -> . transitionkeyword ARROW ID
    (24) transition -> . transitionkeyword ARROW transitionkeyword
    (14) transitionterm -> . CHAR
    (15) transitionterm -> . INT
    (16) transitionterm -> . STRING
    (17) transitionterm -> . CLASSNAME PARSTART enumeration PAREND
    (18) transitionkeyword -> . ELSE
    (19) transitionkeyword -> . DEADEND
    (20) transitionkeyword -> . ALPHABET
    (21) transitionkeyword -> . ITSELF

    CHAR            shift and go to state 41
    INT             shift and go to state 42
    STRING          shift and go to state 43
    CLASSNAME       shift and go to state 39
    ELSE            shift and go to state 86
    DEADEND         shift and go to state 87
    ALPHABET        shift and go to state 88
    ITSELF          shift and go to state 89

    statedescription               shift and go to state 106
    transition                     shift and go to state 83
    transitionterm                 shift and go to state 84
    transitionkeyword              shift and go to state 85

state 100

    (30) states -> ID statedescription .

    TERMINAL        reduce using rule 30 (states -> ID statedescription .)
    ID              reduce using rule 30 (states -> ID statedescription .)


state 101

    (22) transition -> transitionterm ARROW ID .

    CHAR            reduce using rule 22 (transition -> transitionterm ARROW ID .)
    INT             reduce using rule 22 (transition -> transitionterm ARROW ID .)
    STRING          reduce using rule 22 (transition -> transitionterm ARROW ID .)
    CLASSNAME       reduce using rule 22 (transition -> transitionterm ARROW ID .)
    ELSE            reduce using rule 22 (transition -> transitionterm ARROW ID .)
    DEADEND         reduce using rule 22 (transition -> transitionterm ARROW ID .)
    ALPHABET        reduce using rule 22 (transition -> transitionterm ARROW ID .)
    ITSELF          reduce using rule 22 (transition -> transitionterm ARROW ID .)
    ID              reduce using rule 22 (transition -> transitionterm ARROW ID .)
    TERMINAL        reduce using rule 22 (transition -> transitionterm ARROW ID .)
    BLOCKEND        reduce using rule 22 (transition -> transitionterm ARROW ID .)


state 102

    (24) transition -> transitionkeyword ARROW transitionkeyword .

    CHAR            reduce using rule 24 (transition -> transitionkeyword ARROW transitionkeyword .)
    INT             reduce using rule 24 (transition -> transitionkeyword ARROW transitionkeyword .)
    STRING          reduce using rule 24 (transition -> transitionkeyword ARROW transitionkeyword .)
    CLASSNAME       reduce using rule 24 (transition -> transitionkeyword ARROW transitionkeyword .)
    ELSE            reduce using rule 24 (transition -> transitionkeyword ARROW transitionkeyword .)
    DEADEND         reduce using rule 24 (transition -> transitionkeyword ARROW transitionkeyword .)
    ALPHABET        reduce using rule 24 (transition -> transitionkeyword ARROW transitionkeyword .)
    ITSELF          reduce using rule 24 (transition -> transitionkeyword ARROW transitionkeyword .)
    ID              reduce using rule 24 (transition -> transitionkeyword ARROW transitionkeyword .)
    TERMINAL        reduce using rule 24 (transition -> transitionkeyword ARROW transitionkeyword .)
    BLOCKEND        reduce using rule 24 (transition -> transitionkeyword ARROW transitionkeyword .)


state 103

    (23) transition -> transitionkeyword ARROW ID .

    CHAR            reduce using rule 23 (transition -> transitionkeyword ARROW ID .)
    INT             reduce using rule 23 (transition -> transitionkeyword ARROW ID .)
    STRING          reduce using rule 23 (transition -> transitionkeyword ARROW ID .)
    CLASSNAME       reduce using rule 23 (transition -> transitionkeyword ARROW ID .)
    ELSE            reduce using rule 23 (transition -> transitionkeyword ARROW ID .)
    DEADEND         reduce using rule 23 (transition -> transitionkeyword ARROW ID .)
    ALPHABET        reduce using rule 23 (transition -> transitionkeyword ARROW ID .)
    ITSELF          reduce using rule 23 (transition -> transitionkeyword ARROW ID .)
    ID              reduce using rule 23 (transition -> transitionkeyword ARROW ID .)
    TERMINAL        reduce using rule 23 (transition -> transitionkeyword ARROW ID .)
    BLOCKEND        reduce using rule 23 (transition -> transitionkeyword ARROW ID .)


state 104

    (42) method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART . RETURN PARSTART logicoperations PAREND BLOCKEND

    RETURN          shift and go to state 107


state 105

    (26) automatondescribebody -> START statedescription states TERMINAL BLOCKSTART . termstates BLOCKEND
    (32) termstates -> . termstates ID statedescription
    (33) termstates -> . ID statedescription
    (34) termstates -> . empty
    (54) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 109
    BLOCKEND        reduce using rule 54 (empty -> .)

  ! ID              [ reduce using rule 54 (empty -> .) ]

    termstates                     shift and go to state 108
    empty                          shift and go to state 110

state 106

    (29) states -> states ID statedescription .

    TERMINAL        reduce using rule 29 (states -> states ID statedescription .)
    ID              reduce using rule 29 (states -> states ID statedescription .)


state 107

    (42) method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN . PARSTART logicoperations PAREND BLOCKEND

    PARSTART        shift and go to state 111


state 108

    (26) automatondescribebody -> START statedescription states TERMINAL BLOCKSTART termstates . BLOCKEND
    (32) termstates -> termstates . ID statedescription

    BLOCKEND        shift and go to state 112
    ID              shift and go to state 113


state 109

    (33) termstates -> ID . statedescription
    (27) statedescription -> . transition statedescription
    (28) statedescription -> . transition
    (22) transition -> . transitionterm ARROW ID
    (23) transition -> . transitionkeyword ARROW ID
    (24) transition -> . transitionkeyword ARROW transitionkeyword
    (14) transitionterm -> . CHAR
    (15) transitionterm -> . INT
    (16) transitionterm -> . STRING
    (17) transitionterm -> . CLASSNAME PARSTART enumeration PAREND
    (18) transitionkeyword -> . ELSE
    (19) transitionkeyword -> . DEADEND
    (20) transitionkeyword -> . ALPHABET
    (21) transitionkeyword -> . ITSELF

    CHAR            shift and go to state 41
    INT             shift and go to state 42
    STRING          shift and go to state 43
    CLASSNAME       shift and go to state 39
    ELSE            shift and go to state 86
    DEADEND         shift and go to state 87
    ALPHABET        shift and go to state 88
    ITSELF          shift and go to state 89

    statedescription               shift and go to state 114
    transition                     shift and go to state 83
    transitionterm                 shift and go to state 84
    transitionkeyword              shift and go to state 85

state 110

    (34) termstates -> empty .

    BLOCKEND        reduce using rule 34 (termstates -> empty .)
    ID              reduce using rule 34 (termstates -> empty .)


state 111

    (42) method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART . logicoperations PAREND BLOCKEND
    (44) logicoperations -> . compareoperation
    (45) logicoperations -> . PARSTART logicoperations PAREND
    (46) logicoperations -> . logicoperations LOGICOPERATOR PARSTART compareoperation PAREND
    (43) compareoperation -> . ID METHOD COMPAREOPERATOR ID METHOD

    PARSTART        shift and go to state 116
    ID              shift and go to state 115

    logicoperations                shift and go to state 117
    compareoperation               shift and go to state 118

state 112

    (26) automatondescribebody -> START statedescription states TERMINAL BLOCKSTART termstates BLOCKEND .

    BLOCKEND        reduce using rule 26 (automatondescribebody -> START statedescription states TERMINAL BLOCKSTART termstates BLOCKEND .)


state 113

    (32) termstates -> termstates ID . statedescription
    (27) statedescription -> . transition statedescription
    (28) statedescription -> . transition
    (22) transition -> . transitionterm ARROW ID
    (23) transition -> . transitionkeyword ARROW ID
    (24) transition -> . transitionkeyword ARROW transitionkeyword
    (14) transitionterm -> . CHAR
    (15) transitionterm -> . INT
    (16) transitionterm -> . STRING
    (17) transitionterm -> . CLASSNAME PARSTART enumeration PAREND
    (18) transitionkeyword -> . ELSE
    (19) transitionkeyword -> . DEADEND
    (20) transitionkeyword -> . ALPHABET
    (21) transitionkeyword -> . ITSELF

    CHAR            shift and go to state 41
    INT             shift and go to state 42
    STRING          shift and go to state 43
    CLASSNAME       shift and go to state 39
    ELSE            shift and go to state 86
    DEADEND         shift and go to state 87
    ALPHABET        shift and go to state 88
    ITSELF          shift and go to state 89

    statedescription               shift and go to state 119
    transition                     shift and go to state 83
    transitionterm                 shift and go to state 84
    transitionkeyword              shift and go to state 85

state 114

    (33) termstates -> ID statedescription .

    BLOCKEND        reduce using rule 33 (termstates -> ID statedescription .)
    ID              reduce using rule 33 (termstates -> ID statedescription .)


state 115

    (43) compareoperation -> ID . METHOD COMPAREOPERATOR ID METHOD

    METHOD          shift and go to state 120


state 116

    (45) logicoperations -> PARSTART . logicoperations PAREND
    (44) logicoperations -> . compareoperation
    (45) logicoperations -> . PARSTART logicoperations PAREND
    (46) logicoperations -> . logicoperations LOGICOPERATOR PARSTART compareoperation PAREND
    (43) compareoperation -> . ID METHOD COMPAREOPERATOR ID METHOD

    PARSTART        shift and go to state 116
    ID              shift and go to state 115

    logicoperations                shift and go to state 121
    compareoperation               shift and go to state 118

state 117

    (42) method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations . PAREND BLOCKEND
    (46) logicoperations -> logicoperations . LOGICOPERATOR PARSTART compareoperation PAREND

    PAREND          shift and go to state 122
    LOGICOPERATOR   shift and go to state 123


state 118

    (44) logicoperations -> compareoperation .

    PAREND          reduce using rule 44 (logicoperations -> compareoperation .)
    LOGICOPERATOR   reduce using rule 44 (logicoperations -> compareoperation .)


state 119

    (32) termstates -> termstates ID statedescription .

    BLOCKEND        reduce using rule 32 (termstates -> termstates ID statedescription .)
    ID              reduce using rule 32 (termstates -> termstates ID statedescription .)


state 120

    (43) compareoperation -> ID METHOD . COMPAREOPERATOR ID METHOD

    COMPAREOPERATOR shift and go to state 124


state 121

    (45) logicoperations -> PARSTART logicoperations . PAREND
    (46) logicoperations -> logicoperations . LOGICOPERATOR PARSTART compareoperation PAREND

    PAREND          shift and go to state 125
    LOGICOPERATOR   shift and go to state 123


state 122

    (42) method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND . BLOCKEND

    BLOCKEND        shift and go to state 126


state 123

    (46) logicoperations -> logicoperations LOGICOPERATOR . PARSTART compareoperation PAREND

    PARSTART        shift and go to state 127


state 124

    (43) compareoperation -> ID METHOD COMPAREOPERATOR . ID METHOD

    ID              shift and go to state 128


state 125

    (45) logicoperations -> PARSTART logicoperations PAREND .

    PAREND          reduce using rule 45 (logicoperations -> PARSTART logicoperations PAREND .)
    LOGICOPERATOR   reduce using rule 45 (logicoperations -> PARSTART logicoperations PAREND .)


state 126

    (42) method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND .

    OVERRIDE        reduce using rule 42 (method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND .)
    BLOCKEND        reduce using rule 42 (method -> OVERRIDE FUN ID PARSTART fields PAREND TYPIZATION CLASSNAME BLOCKSTART RETURN PARSTART logicoperations PAREND BLOCKEND .)


state 127

    (46) logicoperations -> logicoperations LOGICOPERATOR PARSTART . compareoperation PAREND
    (43) compareoperation -> . ID METHOD COMPAREOPERATOR ID METHOD

    ID              shift and go to state 115

    compareoperation               shift and go to state 129

state 128

    (43) compareoperation -> ID METHOD COMPAREOPERATOR ID . METHOD

    METHOD          shift and go to state 130


state 129

    (46) logicoperations -> logicoperations LOGICOPERATOR PARSTART compareoperation . PAREND

    PAREND          shift and go to state 131


state 130

    (43) compareoperation -> ID METHOD COMPAREOPERATOR ID METHOD .

    PAREND          reduce using rule 43 (compareoperation -> ID METHOD COMPAREOPERATOR ID METHOD .)
    LOGICOPERATOR   reduce using rule 43 (compareoperation -> ID METHOD COMPAREOPERATOR ID METHOD .)


state 131

    (46) logicoperations -> logicoperations LOGICOPERATOR PARSTART compareoperation PAREND .

    PAREND          reduce using rule 46 (logicoperations -> logicoperations LOGICOPERATOR PARSTART compareoperation PAREND .)
    LOGICOPERATOR   reduce using rule 46 (logicoperations -> logicoperations LOGICOPERATOR PARSTART compareoperation PAREND .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PAREND in state 53 resolved as shift
WARNING: shift/reduce conflict for ID in state 82 resolved as shift
WARNING: shift/reduce conflict for ID in state 105 resolved as shift
